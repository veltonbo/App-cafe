<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Manejo Café</title>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-database-compat.js"></script>

  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      margin: 0;
      background-color: #121212;
      color: #e0e0e0;
    }
    .claro {
      background: #f9f9f9;
      color: #111;
    }
    .claro input, .claro select, .claro button, .claro .item {
      background-color: #fff;
      color: #000;
    }
    .menu {
      display: flex;
      flex-wrap: wrap;
      background-color: #1e1e1e;
    }
    .menu button {
      flex: 1;
      padding: 12px;
      background-color: #1e1e1e;
      color: #e0e0e0;
      border: none;
      font-weight: bold;
      cursor: pointer;
    }
    .menu button.active {
      background-color: #388e3c;
    }
    .aba {
      display: none;
      padding: 20px;
      max-width: 800px;
      margin: auto;
    }
    .aba.active {
      display: block;
    }
    input, select, button {
      width: 100%;
      padding: 10px;
      margin: 10px 0;
      border-radius: 6px;
      border: 1px solid #555;
      background-color: #2c2c2c;
      color: #fff;
    }
    .item {
      background-color: #1e1e1e;
      margin: 10px 0;
      padding: 15px;
      border-left: 4px solid #66bb6a;
      display: flex;
      justify-content: space-between;
    }
    .item button {
      background: none;
      border: none;
      font-size: 18px;
      cursor: pointer;
      color: #fff;
    }
    canvas {
      background: #1e1e1e;
      padding: 15px;
      border-radius: 10px;
      margin-top: 20px;
    }
    #botaoTema {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: #2e7d32;
      color: white;
      border-radius: 50%;
      font-size: 20px;
      width: 48px;
      height: 48px;
      border: none;
      box-shadow: 0 4px 10px #000;
      cursor: pointer;
    }
  </style>
</head>

<body onload="inicializarApp()">
  <button id="botaoTema" onclick="alternarTema()">☀️</button>
  <div class="menu">
    <button onclick="mostrarAba('aplicacoes')" id="btn-aplicacoes">Aplicações</button>
    <button onclick="mostrarAba('tarefas')" id="btn-tarefas">Tarefas</button>
    <button onclick="mostrarAba('financeiro')" id="btn-financeiro">Financeiro</button>
    <button onclick="mostrarAba('backup')" id="btn-backup">Backup</button>
    <button onclick="mostrarAba('relatorio')" id="btn-relatorio">Relatório</button>
  </div>

  <div id="aplicacoes" class="aba">
    <h3>Aplicações</h3>
    <input id="dataApp" type="date">
    <input id="produtoApp" placeholder="Produto">
    <input id="dosagemApp" placeholder="Dosagem">
    <select id="tipoApp">
      <option>Adubo</option>
      <option>Fungicida</option>
      <option>Inseticida</option>
      <option>Herbicida</option>
    </select>
    <button onclick="adicionarAplicacao()">Salvar</button>
    <div id="listaAplicacoes"></div>
  </div>

  <div id="tarefas" class="aba">
    <h3>Tarefas</h3>
    <input id="dataTarefa" type="date">
    <input id="descricaoTarefa" placeholder="Descrição">
    <button onclick="adicionarTarefa()">Salvar</button>
    <h4>A Fazer</h4>
    <div id="listaTarefas"></div>
    <h4>Feitas</h4>
    <div id="listaTarefasFeitas"></div>
  </div>

  <div id="financeiro" class="aba">
    <h3>Financeiro</h3>
    <input id="dataFin" type="date">
    <input id="produtoFin" placeholder="Produto">
    <input id="valorFin" placeholder="Valor" type="number">
    <select id="tipoFin">
      <option>Adubo</option>
      <option>Fungicida</option>
      <option>Inseticida</option>
      <option>Herbicida</option>
    </select>
    <button onclick="adicionarFinanceiro()">Salvar</button>
    <h4>A Vencer</h4>
    <div id="financeiroVencer"></div>
    <h4>Pagos</h4>
    <div id="financeiroPago"></div>
    <canvas id="graficoGastos"></canvas>
  </div>

  <div id="backup" class="aba">
    <h3>Backup</h3>
    <button onclick="fazerBackup()">Baixar Backup</button>
  </div>

  <div id="relatorio" class="aba">
    <h3>Relatório</h3>
    <p>Total de Aplicações: <span id="relAplicacoes">0</span></p>
    <p>Tarefas a Fazer: <span id="relTarefas">0</span></p>
    <p>Tarefas Executadas: <span id="relFeitas">0</span></p>
    <p>Gastos Pagos: R$ <span id="relPago">0.00</span></p>
    <p>Gastos Pendentes: R$ <span id="relPendente">0.00</span></p>
    <button onclick="gerarRelatorio()">Atualizar</button>
  </div>

<script>
const firebaseConfig = {
  apiKey: "AIzaSyD773S1h91tovlKTPbaeAZbN2o1yxROcOc",
  authDomain: "manej-cafe.firebaseapp.com",
  databaseURL: "https://manej-cafe-default-rtdb.firebaseio.com",
  projectId: "manej-cafe",
  storageBucket: "manej-cafe.appspot.com",
  messagingSenderId: "808931200634",
  appId: "1:808931200634:web:71357af2ff0dc2e4f5f5c3"
};
firebase.initializeApp(firebaseConfig);
const db = firebase.database();
const aplicacoes = [], tarefas = [], tarefasFeitas = [], financeiro = [];

function alternarTema() {
  document.body.classList.toggle('claro');
  localStorage.setItem('tema', document.body.classList.contains('claro') ? 'claro' : 'escuro');
}
function inicializarApp() {
  if (localStorage.getItem('tema') === 'claro') document.body.classList.add('claro');
  mostrarAba(localStorage.getItem('aba') || 'aplicacoes');
  carregarAplicacoes(); carregarTarefas(); carregarFinanceiro();
}
function mostrarAba(id) {
  document.querySelectorAll('.aba').forEach(div => div.classList.remove('active'));
  document.querySelectorAll('.menu button').forEach(btn => btn.classList.remove('active'));
  document.getElementById(id).classList.add('active');
  document.getElementById('btn-' + id).classList.add('active');
  localStorage.setItem('aba', id);
}

// --- Aplicações ---
function adicionarAplicacao() {
  const nova = { data: dataApp.value, produto: produtoApp.value, dosagem: dosagemApp.value, tipo: tipoApp.value };
  if (!nova.data || !nova.produto || !nova.dosagem) return alert("Preencha tudo!");
  aplicacoes.push(nova);
  db.ref('Aplicacoes').set(aplicacoes);
  atualizarAplicacoes();
}
function atualizarAplicacoes() {
  listaAplicacoes.innerHTML = '';
  aplicacoes.forEach((a, i) => {
    const div = document.createElement('div');
    div.className = 'item';
    div.innerHTML = `${a.data} - ${a.produto} (${a.dosagem}) - ${a.tipo}`;
    const btn = document.createElement('button');
    btn.textContent = '❌';
    btn.onclick = () => { aplicacoes.splice(i, 1); db.ref('Aplicacoes').set(aplicacoes); atualizarAplicacoes(); };
    div.appendChild(btn);
    listaAplicacoes.appendChild(div);
  });
}
function carregarAplicacoes() {
  db.ref('Aplicacoes').once('value').then(snap => {
    if (snap.exists()) {
      aplicacoes.length = 0;
      aplicacoes.push(...snap.val());
      atualizarAplicacoes();
    }
  });
}

// --- Tarefas ---
function adicionarTarefa() {
  const nova = { data: dataTarefa.value, descricao: descricaoTarefa.value, executada: false };
  if (!nova.data || !nova.descricao) return alert("Preencha tudo!");
  tarefas.push(nova); salvarTarefas(); atualizarTarefas();
}
function salvarTarefas() {
  db.ref('Tarefas').set([...tarefas, ...tarefasFeitas]);
}
function atualizarTarefas() {
  listaTarefas.innerHTML = ''; listaTarefasFeitas.innerHTML = '';
  tarefas.forEach((t, i) => {
    const div = document.createElement('div');
    div.className = 'item';
    div.innerHTML = `${t.data} - ${t.descricao}`;
    const btn = document.createElement('button');
    btn.textContent = '✔️';
    btn.onclick = () => { t.executada = true; tarefasFeitas.push(tarefas.splice(i, 1)[0]); salvarTarefas(); atualizarTarefas(); };
    div.appendChild(btn); listaTarefas.appendChild(div);
  });
  tarefasFeitas.forEach((t, i) => {
    const div = document.createElement('div');
    div.className = 'item';
    div.innerHTML = `${t.data} - ${t.descricao}`;
    const btn = document.createElement('button');
    btn.textContent = '❌';
    btn.onclick = () => { tarefasFeitas.splice(i, 1); salvarTarefas(); atualizarTarefas(); };
    div.appendChild(btn); listaTarefasFeitas.appendChild(div);
  });
}
function carregarTarefas() {
  db.ref('Tarefas').once('value').then(snap => {
    if (snap.exists()) {
      tarefas.length = 0; tarefasFeitas.length = 0;
      snap.val().forEach(t => (t.executada ? tarefasFeitas : tarefas).push(t));
      atualizarTarefas();
    }
  });
}

// --- Financeiro ---
function adicionarFinanceiro() {
  const novo = {
    data: dataFin.value,
    produto: produtoFin.value,
    valor: parseFloat(valorFin.value),
    tipo: tipoFin.value,
    pago: false
  };
  if (!novo.data || !novo.produto || isNaN(novo.valor)) return alert("Preencha tudo!");
  financeiro.push(novo); salvarFinanceiro(); atualizarFinanceiro();
}
function salvarFinanceiro() { db.ref('Financeiro').set(financeiro); }
function atualizarFinanceiro() {
  financeiroVencer.innerHTML = ''; financeiroPago.innerHTML = ''; let total = 0;
  financeiro.forEach((f, i) => {
    const div = document.createElement('div');
    div.className = 'item';
    div.innerHTML = `${f.data} - ${f.produto} - R$ ${f.valor.toFixed(2)} - ${f.tipo}`;
    const btn = document.createElement('button');
    btn.textContent = f.pago ? '❌' : '✔️';
    btn.onclick = () => {
      if (f.pago) financeiro.splice(i, 1);
      else f.pago = true;
      salvarFinanceiro(); atualizarFinanceiro();
    };
    div.appendChild(btn);
    (f.pago ? financeiroPago : financeiroVencer).appendChild(div);
    if (!f.pago) total += f.valor;
  });
  gerarGrafico();
}
function carregarFinanceiro() {
  db.ref('Financeiro').once('value').then(snap => {
    if (snap.exists()) {
      financeiro.length = 0;
      financeiro.push(...snap.val());
      atualizarFinanceiro();
    }
  });
}
function gerarGrafico() {
  const ctx = document.getElementById('graficoGastos').getContext('2d');
  if (window.grafico) window.grafico.destroy();
  const totais = {};
  financeiro.forEach(f => { if (f.pago) totais[f.tipo] = (totais[f.tipo] || 0) + f.valor; });
  window.grafico = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: Object.keys(totais),
      datasets: [{ label: 'Gastos pagos', data: Object.values(totais), backgroundColor: '#66bb6a' }]
    }
  });
}

// --- Backup & Relatório ---
function fazerBackup() {
  const dados = { aplicacoes, tarefas, tarefasFeitas, financeiro };
  const blob = new Blob([JSON.stringify(dados)], { type: 'application/json' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `backup-${new Date().toISOString().split('T')[0]}.json`;
  a.click();
}
function gerarRelatorio() {
  let pago = 0, pendente = 0;
  financeiro.forEach(f => f.pago ? pago += f.valor : pendente += f.valor);
  relAplicacoes.innerText = aplicacoes.length;
  relTarefas.innerText = tarefas.length;
  relFeitas.innerText = tarefasFeitas.length;
  relPago.innerText = pago.toFixed(2);
  relPendente.innerText = pendente.toFixed(2);
}
</script>
</body>
</html>
